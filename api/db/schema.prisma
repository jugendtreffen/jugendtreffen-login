// Don't forget to tell Prisma about your edits to this file using
// `yarn rw prisma migrate dev` or `yarn rw prisma db push`.
// `migrate` is like committing while `push` is for prototyping.
// Read more about both here:
// https://www.prisma.io/docs/orm/prisma-migrate

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model User {
  id                    BigInt    @id @default(autoincrement())
  email                 String    @unique
  name                  String
  familyName            String
  birthdate             DateTime?
  gender                String?
  roleId                Int
  country               String?
  city                  String?
  postalCode            String?
  address               String?
  phoneNumber           String?
  phoneCaretakerContact String?

  role SystemRole @relation(fields: [roleId], references: [id])
}

model Participation {
  id                  BigInt   @id @default(autoincrement())
  eventId             Int
  travelMethod        String?
  participationRoleId Int?
  accomodation        Boolean?
  startDate           DateTime
  endDate             DateTime
  helpAfterwards      Boolean?
  foundUsBy           String?
  acceptPhotos        Boolean
  acceptCoC           Boolean

  event             Event              @relation(fields: [eventId], references: [id])
  participationRole ParticipationRole? @relation(fields: [participationRoleId], references: [id])
}

model SystemRole {
  id   Int    @id @default(autoincrement())
  desc String @unique
  User User[]
}

model ParticipationRole {
  id            Int             @id @default(autoincrement())
  desc          String          @unique
  Participation Participation[]
}

model Event {
  id   Int    @id @default(autoincrement())
  name String @unique
  desc String

  Participation Participation[]
}
